#![allow(bad_style)]
extern crate libc;
use libc::FILE;
/* automatically generated by rust-bindgen */

pub type rl_vcpfunc_t =
    ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_char)>;
extern "C" {
    pub fn rl_callback_handler_install(arg1: *const ::std::os::raw::c_char, arg2: rl_vcpfunc_t);
}
extern "C" {
    pub fn rl_callback_read_char();
}
extern "C" {
    pub fn rl_callback_handler_remove();
}
extern "C" {
    pub fn rl_redisplay();
}
extern "C" {
    pub fn rl_save_prompt();
}
extern "C" {
    pub fn rl_restore_prompt();
}
extern "C" {
    pub fn rl_replace_line(arg1: *const ::std::os::raw::c_char, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rl_copy_text(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_resize_terminal();
}
extern "C" {
    #[link_name = "\u{1}rl_line_buffer"]
    pub static mut rl_line_buffer: *mut ::std::os::raw::c_char;
}
extern "C" {
    #[link_name = "\u{1}rl_point"]
    pub static mut rl_point: ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}rl_end"]
    pub static mut rl_end: ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}rl_instream"]
    pub static mut rl_instream: *mut FILE;
}
extern "C" {
    #[link_name = "\u{1}rl_outstream"]
    pub static mut rl_outstream: *mut FILE;
}
extern "C" {
    #[link_name = "\u{1}rl_catch_signals"]
    pub static mut rl_catch_signals: ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}rl_catch_sigwinch"]
    pub static mut rl_catch_sigwinch: ::std::os::raw::c_int;
}
extern "C" {
    pub fn add_history(arg1: *const ::std::os::raw::c_char);
}
